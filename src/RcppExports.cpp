// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// esf_mst_sum_vector
List esf_mst_sum_vector(List parlist, List ojlist, int order, NumericVector minSolved, NumericVector maxSolved, NumericVector minSolved_design, NumericVector maxSolved_design);
RcppExport SEXP _tmt_esf_mst_sum_vector(SEXP parlistSEXP, SEXP ojlistSEXP, SEXP orderSEXP, SEXP minSolvedSEXP, SEXP maxSolvedSEXP, SEXP minSolved_designSEXP, SEXP maxSolved_designSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type parlist(parlistSEXP);
    Rcpp::traits::input_parameter< List >::type ojlist(ojlistSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type minSolved(minSolvedSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maxSolved(maxSolvedSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type minSolved_design(minSolved_designSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maxSolved_design(maxSolved_designSEXP);
    rcpp_result_gen = Rcpp::wrap(esf_mst_sum_vector(parlist, ojlist, order, minSolved, maxSolved, minSolved_design, maxSolved_design));
    return rcpp_result_gen;
END_RCPP
}
// esf_mst_sum_vector_s1
Rcpp::NumericVector esf_mst_sum_vector_s1(Rcpp::NumericVector par, Rcpp::NumericVector oj);
RcppExport SEXP _tmt_esf_mst_sum_vector_s1(SEXP parSEXP, SEXP ojSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type oj(ojSEXP);
    rcpp_result_gen = Rcpp::wrap(esf_mst_sum_vector_s1(par, oj));
    return rcpp_result_gen;
END_RCPP
}
// esf_mst_sum_vector_s2
Rcpp::NumericVector esf_mst_sum_vector_s2(Rcpp::NumericVector eps, int m, Rcpp::NumericVector rcum, Rcpp::NumericVector eps_position, Rcpp::NumericVector minSolved, Rcpp::NumericVector maxSolved, Rcpp::NumericVector minSolved_design, Rcpp::NumericVector maxSolved_design);
RcppExport SEXP _tmt_esf_mst_sum_vector_s2(SEXP epsSEXP, SEXP mSEXP, SEXP rcumSEXP, SEXP eps_positionSEXP, SEXP minSolvedSEXP, SEXP maxSolvedSEXP, SEXP minSolved_designSEXP, SEXP maxSolved_designSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rcum(rcumSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type eps_position(eps_positionSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type minSolved(minSolvedSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type maxSolved(maxSolvedSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type minSolved_design(minSolved_designSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type maxSolved_design(maxSolved_designSEXP);
    rcpp_result_gen = Rcpp::wrap(esf_mst_sum_vector_s2(eps, m, rcum, eps_position, minSolved, maxSolved, minSolved_design, maxSolved_design));
    return rcpp_result_gen;
END_RCPP
}
// esf_nmst_sum_matrix
List esf_nmst_sum_matrix(NumericVector epsi, int order);
RcppExport SEXP _tmt_esf_nmst_sum_matrix(SEXP epsiSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type epsi(epsiSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(esf_nmst_sum_matrix(epsi, order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tmt_esf_mst_sum_vector", (DL_FUNC) &_tmt_esf_mst_sum_vector, 7},
    {"_tmt_esf_mst_sum_vector_s1", (DL_FUNC) &_tmt_esf_mst_sum_vector_s1, 2},
    {"_tmt_esf_mst_sum_vector_s2", (DL_FUNC) &_tmt_esf_mst_sum_vector_s2, 8},
    {"_tmt_esf_nmst_sum_matrix", (DL_FUNC) &_tmt_esf_nmst_sum_matrix, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_tmt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
